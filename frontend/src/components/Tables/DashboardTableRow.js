
import {
  Flex,
  Progress,
  Td,
  Text,
  Tr,
  useColorModeValue,
} from "@chakra-ui/react";
import axios from "axios";
//import React, { useState } from "react";

import React, { useState, useEffect } from 'react';

//import { ReactPropTypes } from "react";
import PropTypes from 'prop-types';
import { setTextRange } from "typescript";
import { append } from "stylis";
//import {useState} from 'react';

//const tt = ["jude",24]
const origin_url = "http://127.0.0.1:8000/test"


export function App() {
  const [text, setText] = useState([]);
  JSON.parse(axios.get("http://127.0.0.1:8000/test"))
  .then((response)=>{
    setText(response.data)
  //JSON.parse(response.data)    

})
  
  //const group = [text].map(g=>[g.response])

  //console.log(response.data)
   // do something with JSON response data


  /*
  const [users, setUsers] = useState([]);
  
  const fetchUsers = async () => {
    
      const response = await axios.get(origin_url);
      setUsers(response.data);
  };
 
  useEffect(() => {
    fetchUsers();
  }, []);
 */
  return (

    <Tr>
    <Td minWidth={{ sm: "250px" }} pl="0px">
      <Flex align="center" py=".8rem" minWidth="100%" flexWrap="nowrap">

        <Text>
         {text}
        </Text>

      </Flex>
    </Td>
    </Tr>
  )}



  

  
function DashboardTableRow(props) {
  //const [text, setText] = useState([]);
  //const { logo, name, members, budget, progression } = props;
  const { progression } = props;
  //axios.get(origin_url).then((response) => response.data).then(response) => {setText(response.result)}

  //const tt = axios.get(origin_url)

/*
  const tt = useEffect(() => {
    axios.get(origin_url)
      .then(response => response.data)
      .then(response => {
        setText(response.results)
      })
  }, []);
  */

  const arr = text.map((tex, idx) => { console.log(tex)})
//const obj = JSON.parse(tt);
  const textColor = useColorModeValue("gray.700", "white");
//  const tt = t.PropTypes
  return (
    
    <Tr>
      <Td minWidth={{ sm: "250px" }} pl="0px">
        <Flex align="center" py=".8rem" minWidth="100%" flexWrap="nowrap">
        
        <Text>
          {arr}
          </Text>
    
        </Flex>
      </Td>

      <Td>
        <Text fontSize="md" color={textColor} fontWeight="bold" pb=".5rem">
        
          </Text>
      </Td>
      <Td>
        <Text fontSize="md" color={textColor} fontWeight="bold" pb=".5rem">
          
          </Text>
          
      </Td>
      <Td>
        <Flex direction="column">
          <Text
            fontSize="md"
            color="teal.300"
            fontWeight="bold"
            pb=".2rem"
          >{`${progression}%`}</Text>
          <Progress
            colorScheme={progression === 100 ? "teal" : "cyan"}
            size="xs"
            value={progression}
            borderRadius="15px"
          />
        </Flex>
      </Td>
    </Tr>
  );
}

export default App;