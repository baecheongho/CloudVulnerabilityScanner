
import {
  Divider,
  Flex,
  ListItem,
  Progress,
  Td,
  Text,
  Tr,
  filter,
  useColorModeValue,
} from "@chakra-ui/react";
import axios from "axios";
import React, { useState, useEffect } from 'react';
import PropTypes from 'prop-types';
import { setTextRange } from "typescript";
import { append, delimiter, replace } from "stylis";
//import {useState} from 'react';

const origin_url = "http://ec2-15-165-76-56.ap-northeast-2.compute.amazonaws.com:8000/aws"

/*
export const App = () => {
  const [text, setText] = useState([]);

  useEffect(() => {
    axios.get(origin_url).then((res) => {setText(res.data);
    })
}, []);
*/

export function App() {

  const [posts, setPosts] = useState([]);
  
    useEffect(() => {
      axios
        .get(origin_url+"/ec2")
        .then((result) => {
          console.log(result.data);
          setPosts(result.data);
          //return result.data
        })
        .catch((error) => console.log(error));
    }, []);
    //let list = posts.map(item =>{item} )
    /*
    const testt = posts.MaintenanceOptions.map(posts=>{
      return posts
    })
    */
    
    //const replacer = ["Reservations","Instances","ImageId","KeyName"];
    //const  str_res = JSON.stringify(posts, replacer, 2)
    const  str_res = JSON.stringify(posts, 2)
    //let bb = JSON.parse(str_res)
    return (
      
      <div>
        
        <Text>{posts.map(item => {
          return item.Value
        })}
        </Text>
      </div>
      

      
    );
    
  }
  
  function DashboardTableRow(props) {
    //const [text, setText] = useState([]);
    //const { logo, name, members, budget, progression } = props;
    const { progression } = props;
    //axios.get(origin_url).then((response) => response.data).then(response) => {setText(response.result)}
  
    //const tt = axios.get(origin_url)
  
  /*
    const tt = useEffect(() => {
      axios.get(origin_url)
        .then(response => response.data)
        .then(response => {
          setText(response.results)
        })
    }, []);
    */
    const [posts, setPosts] = useState([]);
  
    useEffect(() => {
      axios
        .get(origin_url+"/ec2")
        .then((result) => {
          console.log(result.data);
          setPosts(result.data);
          //return result.data
        })
        .catch((error) => console.log(error));
    }, []);
    
    //const replacer = ["Reservations","Instances","ImageId","KeyName"];
    //const  str_res = JSON.stringify(posts, replacer, 2)
    const  str_res = JSON.stringify(posts, 2)
  

    const textColor = useColorModeValue("gray.700", "white");

    return (
      
      <Tr>
        <Td minWidth={{ sm: "250px" }} pl="0px">
          <Flex align="center" py=".8rem" minWidth="100%" flexWrap="nowrap">
          
          <Text>{posts.map(item => {
          return item.Name
          })}
          </Text>
      
          </Flex>
        </Td>
  
        <Td>
          <Text fontSize="md" color={textColor} fontWeight="bold" pb=".5rem">
          {posts.map(item => {
          return item.Value
          })}
            </Text>
        </Td>
        <Td>
          <Text fontSize="md" color={textColor} fontWeight="bold" pb=".5rem">
            
            </Text>
            
        </Td>
        <Td>
          <Flex direction="column">
            <Text
              fontSize="md"
              color="teal.300"
              fontWeight="bold"
              pb=".2rem"
            >{`${progression}%`}</Text>
            <Progress
              colorScheme={progression === 100 ? "teal" : "cyan"}
              size="xs"
              value={progression}
              borderRadius="15px"
            />
          </Flex>
        </Td>
      </Tr>
    );
  }
  
/*function DashboardTableRow(props) {
  
  const { progression } = props;

  return (
    
    <Tr>
      <Td minWidth={{ sm: "250px" }} pl="0px">
        <Flex align="center" py=".8rem" minWidth="100%" flexWrap="nowrap">
        
        <Text>
          {posts.map(item => {
            return item.Value
          })}
          
          </Text>
    
        </Flex>
      </Td>

      <Td>
        <Text fontSize="md" color={textColor} fontWeight="bold" pb=".5rem">
        <p>{str_res}</p>
          </Text>
      </Td>
      <Td>
        <Text fontSize="md" color={textColor} fontWeight="bold" pb=".5rem">
          
          </Text>
          
      </Td>
      <Td>
        <Flex direction="column">
          <Text
            fontSize="md"
            color="teal.300"
            fontWeight="bold"
            pb=".2rem"
          >{`${progression}%`}</Text>
          <Progress
            colorScheme={progression === 100 ? "teal" : "cyan"}
            size="xs"
            value={progression}
            borderRadius="15px"
          />
        </Flex>
      </Td>
    </Tr>
  );
}
*/


export default DashboardTableRow;
