// Chakra imports
import { Image, SimpleGrid, buttonStyles, Button, ButtonGroup, Box, Flex, Grid, Icon, useColorModeValue, } from "@chakra-ui/react";
/*
import {
  AsyncCreatableSelect,
  AsyncSelect,
  CreatableSelect,
  Select,
  SelectComponent,
  SelectInstance
} from "chakra-react-select";
*/
import Select from 'react-select'
import Async, { useAsync } from 'react-select/async';
import { Separator } from "components/Separator/Separator";
// Assets

import BarChart from "components/Charts/BarChart";
import LineChart from "components/Charts/LineChart";

import {
  newestTransactions,
  olderTransactions,
} from "variables/general";
//Icons
import { InfoIcon, WarningIcon } from '@chakra-ui/icons'
// Custom Icons

// Custom imports
import InspectInstances from "./components/InspectInstances";
import Transactions from "./components/Transactions";
import * as Conn from "components/AWS/Conn";
import InspectChart from "./components/InspectChart";
import Trends from "./components/Trends";
//import * as InspectInstances from "components/InspectInstances.js";
//import axios from "axios";
import React, { useState, useEffect, useCallback, use } from 'react';
//import hook
import { useGetEc2Data } from "hooks/AwsEc2"
import { Progress } from "@chakra-ui/react"
import { SearchBar } from "components/Navbars/SearchBar/SearchBar";

export const Inspect = () => {
  // Custom hook to get Ec2Data for select
  const GetEc2Data = Conn.Ec2Data();
  const {getData,onClickEc2Data} = useGetEc2Data();
  //Example for Convert to JSON 
  //const JsonResEc2Data = JSON.stringify(ResEc2Data, 2)
  const textColor = useColorModeValue("gray.700", "white");
  const bgColor = useColorModeValue("#F8F9FA", "gray.800");
  const nameColor = useColorModeValue("gray.500", "white");
  // Handler for Selecting Ec2Instances
  const [selected, setSelected] = useState();
  const handleSelect = (e) => {
    setSelected(e.label);
    //return e.setSelected
  };
  //const animatedComponents = makeAnimated();


  return (    
    <Flex key="inspectMain" direction='column' pt={{ base: "200px", md: "75px" }}>
      <Grid templateColumns={{ sm: "1fr", lg: "1.6fr 1.2fr" }} >
      <Select placeholder='Select Instance' onChange={handleSelect} closeMenuOnSelect={true}
      options={
        GetEc2Data.map((row => {
          return (
            {
              label:`${row[1]}`,
              value:`${row[1]}`,
              //isFixed: true,
            }  
          )
        }))
      }
      >
      </Select>  
      <Grid templateColumns={{ sm: "0.1fr", lg: "0.2fr 1.2fr" }}>       
          <Button colorScheme="blue" variant="outline" onClick={(eventParm) => onClickEc2Data(selected)} >
            점검 실행
          </Button>
          </Grid>
        </Grid>
        {getData}
      <Progress size="xs" isIndeterminate />
      <Grid
        templateColumns={{ sm: "1fr", lg: "1.3fr 1.7fr" }}
        templateRows={{ sm: "repeat(2, 1fr)", lg: "1fr" }}
        gap='24px'
        mb={{ lg: "26px" }}>
        <Trends
          title={"Vulnerabilities Trends"}
          percentage={23}
          chart={<LineChart />}
        />
        <InspectChart
          title={"Overview"}
          percentage={5}
          chart={<BarChart />}
        />
      </Grid>
      <Grid templateColumns={{ sm: "1fr", lg: "1.6fr 1.2fr" }}>
        <InspectInstances title={"진단 항목"} data={InspectInstances} />
        <Transactions
          title={"Report List"} 
          date={"23 - 30 March"}
          newestTransactions={newestTransactions}
          olderTransactions={olderTransactions}
        />
      </Grid>
    </Flex>
  );
}

export default Inspect;
