from typing import Any
import boto3
import sys
from django.shortcuts import render
from django.http import HttpResponse
from rest_framework.views import APIView
from django.views.decorators.csrf import csrf_exempt
import json
from json import JSONEncoder
import datetime
from django.http import JsonResponse



class DateTimeEncoder(JSONEncoder):
                # Overide the default method
                def default(self, obj: Any) -> Any:
                        if isinstance(obj, (datetime.date, datetime.datetime)):
                                return obj.isoformat()
                        
# AWS Auth configuration for boto3 cleint
session = boto3.Session(profile_name='default')
ec2 = boto3.client('ec2',
                        #aws_access_key_id='access_key',
                        #aws_secret_access_key= 'secretkey',
                        #region_name = 'ap-northeast-2'

                            
                        
                        )
@csrf_exempt

def test(request):

        Response = ec2.describe_instances(

                        #Filters=[
                            
                        #],

    )
        #print(request)
        #return HttpResponse(request.post(response))1
        #return request
        
        re = type(request)
        print(type(request))

        #re = Response.strftime("%A %d. %B %Y")
        #print(DateTimeEncoder().encode(Response))
        str =  json.dumps(Response, indent=4, cls=DateTimeEncoder)
        #re2 = eval(str)
        # re = json.encoder()
        re = json.loads(str)
        print (type(re))
        #res = json.dumps(str(re))
        #print (type(res))
        res = JsonResponse(re)
        print(type(res))
        #return JsonResponse(Response)
        return HttpResponse(str, content_type="application/json")

#print("sst")